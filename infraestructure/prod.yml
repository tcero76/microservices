version: '3.8'
services:
  auth-server:
    container_name: authorizationserver
    profiles:
      - prod
    hostname: auth-server
    tty: true
    stdin_open: true
    ports:
      - 8000:8000
    environment:
      - POSTGRES_CONFIG_URL=jdbc:postgresql://postgres:5432/keycloak?currentSchema=payment
      - PORT=8000
      - EXTERNAL_PORT=${EXTERNAL_PORT}
      - EXTERNAL_HOST=${EXTERNAL_HOST}
      - PUBLICKEY=${PUBLICKEY}
      - PRIVATEKEY=${PRIVATEKEY}
    networks:
      - ${GLOBAL_NETWORK}
  bffweb-service:
    container_name: bffweb-service
    profiles:
      - prod
    tty: true
    stdin_open: true
    user: root
    entrypoint: ["check-config-server-started.sh"]
    volumes:
      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
      - "./docker-logs:/workspace/bffweb-service/logs"
    ports:
      - 8086:8086
    environment:
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_AUTH_SERVER_REDIRECT_URI=http://${EXTERNAL_HOST}:${EXTERNAL_PORT}/login/oauth2/code/auth-server
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_AUTH_SERVER_ISSUER_URI=http://auth-server:8000
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_AUTH_SERVER_TOKEN_URI=http://auth-server:8000/oauth2/token
      - BFFWEB_CONFIG_WEB_CLIENT_BASE_URL=http://${HOST_DOCKER_INTERNAL}:8081/api
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - EUREKA_URI=http://discovery-service:8761/eureka/
      - SPRING_CONFIG_IMPORT=configserver:http://${CONFIG_SERVER_USER}:${CONFIG_SERVER_PASSWORD}@config-server:8888
      - EXTERNAL_PORT=${EXTERNAL_PORT}
      - EXTERNAL_HOST=${EXTERNAL_HOST}
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - PUBLICKEY=${PUBLICKEY}
    depends_on:
      - postgres
    networks:
      - ${GLOBAL_NETWORK}
  resource-server:
    container_name: resourceserver
    profiles:
      - prod
    tty: true
    stdin_open: true
    user: root
    entrypoint: ["check-config-server-started.sh"]
    volumes:
      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
      - "./docker-logs:/workspace/resource-service/logs"
    ports:
      - 8081:8081
    environment:
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - EUREKA_URI=http://discovery-service:8761/eureka/
      - ENCRYPT_KEY=${ENCRYPT_KEY}
      - PUBLICKEY=${PUBLICKEY}
      - SPRING_CONFIG_IMPORT=configserver:http://${CONFIG_SERVER_USER}:${CONFIG_SERVER_PASSWORD}@config-server:8888
    depends_on:
      - config-server
      - postgres
    networks:
      - ${GLOBAL_NETWORK}
  gateway:
    container_name: gateway
    profiles:
      - prod
    tty: true
    stdin_open: true
    user: root
    entrypoint: ["check-config-server-started.sh"]
    volumes:
      - "./check-config-server-started.sh:/usr/local/bin/check-config-server-started.sh"
    environment:
      - SERVER_PORT=${EXTERNAL_PORT}
      - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE}
      - EUREKA_URI=http://discovery-service:8761/eureka/
      - SPRING_CONFIG_IMPORT=configserver:http://${CONFIG_SERVER_USER}:${CONFIG_SERVER_PASSWORD}@config-server:8888
    ports:
      - "${EXTERNAL_PORT}:${EXTERNAL_PORT}"
    networks:
      - ${GLOBAL_NETWORK}
    depends_on:
      - postgres
      - config-server
  front:
    image: tcero76/frontend-service:${VERSION}
    container_name: front
    profiles:
      - prod
    tty: true
    stdin_open: true
    hostname: front
    ports:
      - 8082:8082
    user: root
    environment:
      - VITE_APP_REDIRECT_URL=http://${EXTERNAL_HOST}:${EXTERNAL_PORT}
    networks:
      - ${GLOBAL_NETWORK}
  discovery:
    container_name: discovery
    profiles:
      - prod
    tty: true
    stdin_open: true
    hostname: discovery-service
    volumes:
      - "./docker-logs:/workspace/discovery-service/logs"
    ports:
      - 8761:8761
    networks:
      - ${GLOBAL_NETWORK}
  config-server:
    container_name: config-server
    profiles:
      - prod
    tty: true
    stdin_open: true
    ports:
      - 8888:8888
    volumes:
      - "./docker-logs:/workspace/config-server/logs"
    hostname: config-server
    environment:
      - ENCRYPT_KEY=${ENCRYPT_KEY}
    networks:
      - ${GLOBAL_NETWORK}
